@mixin desktop() {
	@media ( min-width: #{ ( $desktop-width + 1px ) } ) {
		@content;
	}
}

@mixin screen-reader-text() {
	position: absolute !important;
	overflow: hidden;
	clip: rect( 1px, 1px, 1px, 1px );
	height: 1px;
	width: 1px;
}

@mixin reset-list() {
	list-style: none;
	margin: 0;
	padding-left: 0;
}

@mixin reset-button() {
	margin: 0;
	padding: 0;
	background: none;
	border: none;
	outline: 0;
}

@mixin reset-link() {
	text-decoration: none;

	&,
	&:hover {
		color: $font-color-body;
	}
}

@mixin reset-input() {
	padding: 0;
	background: none;
	border: none;
	outline: 0;
	font: inherit;
	text-align: inherit;
	color: currentColor;
}

@mixin loading-pulse( $color: $loading-pulse-color ) {
	background-color: $color;
	animation: loading-pulse 1.6s ease-in-out infinite;
}

@mixin loading-pulse-text( $color: $loading-pulse-color ) {
	position: relative;
	color: transparent !important;
	text-shadow: none;

	&:before {
		@include loading-pulse( $color );
		content: '';
		position: absolute;
		top: 1px;
		right: 0;
		bottom: 1px;
		left: 0;
	}

	&:after {
		content: 'Loading';
	}
}

@mixin fixed( $z-index: 100 ) {
	position: fixed;
	transform: translateZ( 0 );
	z-index: $z-index;
	backface-visibility: hidden;
}

@mixin bordered() {
	border: 1px solid rgba( 0, 0, 0, 0.2 );
	border-radius: $border-radius;
}

@mixin well() {
	@include bordered;
	box-shadow: inset 0 0 0.4rem rgba( 0, 0, 0, 0.15 );
}

@mixin standalone() {
	@media screen and ( orientation: portrait ) {
		html.is-ios.is-standalone & {
			@content;
		}
	}
}
